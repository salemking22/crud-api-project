{
  "openapi": "3.0.0",
  "info": {
    "title": "Contacts & Services API",
    "version": "1.0.0",
    "description": "A Node.js API with MongoDB, Google OAuth, and Swagger documentation"
  },
  "servers": [
    {
      "url": "https://crud-api-project-y9c8.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/contacts": {
      "get": {
        "summary": "Get all contacts",
        "operationId": "getContacts",
        "responses": {
          "200": {
            "description": "List of contacts"
          }
        }
      },
      "post": {
        "summary": "Create a new contact",
        "operationId": "createContact",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api/contacts/{id}": {
      "get": {
        "summary": "Get contact by ID",
        "operationId": "getContactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact found"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "put": {
        "summary": "Update contact by ID",
        "operationId": "updateContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Contact updated" },
          "400": { "description": "Invalid input" },
          "404": { "description": "Contact not found" }
        }
      },
      "delete": {
        "summary": "Delete contact by ID",
        "operationId": "deleteContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Contact deleted" },
          "404": { "description": "Contact not found" }
        }
      }
    },
    "/api/services": {
      "get": {
        "summary": "Get all services",
        "operationId": "getServices",
        "responses": {
          "200": {
            "description": "List of services"
          }
        }
      },
      "post": {
        "summary": "Create a new service",
        "operationId": "createService",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Service created" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/services/{id}": {
      "get": {
        "summary": "Get service by ID",
        "operationId": "getServiceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Service found" },
          "404": { "description": "Service not found" }
        }
      },
      "put": {
        "summary": "Update service by ID",
        "operationId": "updateService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Service updated" },
          "400": { "description": "Invalid input" },
          "404": { "description": "Service not found" }
        }
      },
      "delete": {
        "summary": "Delete service by ID",
        "operationId": "deleteService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Service deleted" },
          "404": { "description": "Service not found" }
        }
      }
    },
    "/auth/google": {
      "get": {
        "summary": "Start Google OAuth login",
        "operationId": "startGoogleOAuth",
        "responses": {
          "302": {
            "description": "Redirects to Google login"
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "summary": "Google OAuth callback",
        "operationId": "googleOAuthCallback",
        "responses": {
          "302": {
            "description": "Redirects to success or failure page"
          }
        }
      }
    },
    "/auth/protected": {
      "get": {
        "summary": "Protected route (requires login)",
        "operationId": "protectedRoute",
        "security": [
          {
            "googleOAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Access granted"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "summary": "Log out user",
        "operationId": "logoutUser",
        "responses": {
          "302": {
            "description": "Redirect to homepage"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "googleOAuth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth",
            "tokenUrl": "https://oauth2.googleapis.com/token",
            "scopes": {
              "profile": "Access user profile",
              "email": "Access user email"
            }
          }
        }
      }
    },
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "email": { "type": "string" },
          "favoriteColor": { "type": "string" },
          "birthday": { "type": "string", "format": "date" }
        },
        "required": ["firstName", "lastName", "email"]
      },
      "Service": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "category": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number" },
          "availability": { "type": "string" },
          "provider": { "type": "string" },
          "rating": { "type": "number" }
        },
        "required": ["name", "category", "description"]
      }
    }
  }
}
